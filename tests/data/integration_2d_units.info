units
{
  mesh millimeter
  heat_source
  {
    scan_path millimeter
    dimension millimeter
    power milliwatt
    velocity millimeter/second
  }
}


geometry
{
  import_mesh false ; Use builtin mesh generator
  dim 2 ; dimension of the domain
  length 2e1 ; 
  height 1e1 ;  In 3D, the third parameters is width
  length_divisions 20 ; Number of cell layers in the length direction
  height_divisions 10 ; Number of cell layers in the height direction
}

physics
{
  thermal true
  mechanical false
}

refinement
{
  n_refinements 2 ; Number of time the cells on the paths of the beams are
                  ; refined
}

materials
{
  property_format polynomial

  n_materials 1

  material_0
  {
    solid
    {
      density 7541 ; [kg/m^3] For now all the states needs to have the same
                    ; density. The value can be constant or an equation
      specific_heat 600 ; [J/kg K]  The value can be constant or an equation
      thermal_conductivity_x 26.6 ; [W/m K] 
      thermal_conductivity_z 26.6 ; [W/m K] 
      ; The value can be constant or an equation like 10*exp(T)*sin(2.*T)
    }

    powder
    {
      specific_heat 600 ; [J/kg K]
      density 7541 ; [kg/m^3]
      thermal_conductivity_x 0.266 ; [W/m K]
      thermal_conductivity_z 0.266 ; [W/m K]
    }

    liquid
    {
      specific_heat 775 ; [J/kg K]
      density 7541 ; [kg/m^3]
      thermal_conductivity_x 29.0 ; [W/m k]  
      thermal_conductivity_z 29.0 ; [W/m k]  
      ; Not all three states need to define the same properties or to exist
    }

    solidus 1528 ; [K]
    liquidus 1610 ; [K]
    latent_heat 227000 ; [J/kg]
  }
}

sources
{
  n_beams 1

  beam_0
  {
    depth 1 ; maximum depth reached by the laser
    diameter 1 ; 
    scan_path_file scan_path_units.txt
    scan_path_file_format segment
    absorption_efficiency 0.3
    max_power 1200000.0
    type electron_beam
  }
}

time_stepping
{
  method backward_euler ; Possibilities: backward_euler, implicit_midpoint,
                        ; crank_nicolson, sdirk2, forward_euler, rk_third_order,
                        ; rk_fourth_order
  duration 1e-9 ; [s]
  time_step 5e-11 ; [s]
}

post_processor
{
  filename_prefix output
}

discretization
{
  thermal
  {
    fe_degree 3
    quadrature gauss ; Optional parameter. Possibilities: gauss or lobatto
  }
}

boundary
{
  type adiabatic
}
